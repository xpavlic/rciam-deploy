---
- name: Install dependencies
  apt:
    pkg:
      - curl
      - git
      - nginx
      - python3-pip

- name: Add node repository
  shell: curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -

- name: Install node and npm
  apt:
    pkg:
      - build-essential
      - nodejs

- name: Install pm2
  npm:
    name: pm2
    global: yes

- name: Check if SSH key is already present
  stat:
    path: "{{ federation_registry_git.key_path }}"
  register: key_stat_result

- debug:
    var: key_stat_result.stat.exists

- debug:
    msg: "{{federation_registry_git.key_path}}"

- name: Generate SSH key for accessing GitHub
  command: "ssh-keygen -t rsa -f {{ federation_registry_git.key_path }} -N ''"
  when: not key_stat_result.stat.exists

- name: Get key content
  command: "cat {{ federation_registry_git.key_path }}.pub"
  register: key_content

- name: Check if known_host exists
  stat:
    path: "{{ federation_registry_known_hosts_path }}"
  register: known_hosts_stat

- name: Create known_hosts if it doesn't exist
  file:
    path: "{{ federation_registry_known_hosts_path }}"
    state: touch
  when: not known_hosts_stat.stat.exists

- name: Get the content of known hosts
  shell: "cat {{ federation_registry_known_hosts_path }} | grep github.com"
  register: host_stat
  failed_when: host_stat.rc > 1

- name: Modify known hosts
  block:
    - name: Fetch GitHub public key
      command: ssh-keyscan -T 10 github.com
      register: keyscan

    - name: Add GitHub public key to ssh known_hosts
      lineinfile:
        path: "{{ federation_registry_known_hosts_path }}"
        create: yes
        line: "{{ item }}"
      with_items: '{{ keyscan.stdout_lines }}'
  when: host_stat.rc == 1

- name: Add SSH public key to GitHub account
  uri:
    url: https://api.github.com/user/keys
    validate_certs: no
    method: POST
    body:
      title: "{{inventory_hostname}}-ansible"
      key: "{{ key_content.stdout }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "token {{ federation_registry_git.github_access_token }}"
  register: task_log
  failed_when: task_log.content is defined and task_log.content.find('key is already in use') == 0